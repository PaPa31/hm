"use strict";(self.webpackChunkhuman_and_machine=self.webpackChunkhuman_and_machine||[]).push([[61429],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),a=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=a(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,u=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=a(n),m=o,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||c;return n?r.createElement(f,s(s({ref:t},l),{},{components:n})):r.createElement(f,s({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,s=new Array(c);s[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var a=2;a<c;a++)s[a]=n[a];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},79727:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return a},toc:function(){return l},default:function(){return d}});var r=n(87462),o=n(63366),c=(n(67294),n(3905)),s=["components"],i={id:"14-18-combining-multiple-reducers",title:"14.18 Combining Multiple Reducers",date:new Date("2021-04-27T17:10:40.000Z")},u=void 0,a={unversionedId:"react-complete-guide/14-redux/14-18-combining-multiple-reducers",id:"react-complete-guide/14-redux/14-18-combining-multiple-reducers",title:"14.18 Combining Multiple Reducers",description:"index.js",source:"@site/courses/react-complete-guide/14-redux/14-18-combining-multiple-reducers.md",sourceDirName:"react-complete-guide/14-redux",slug:"/react-complete-guide/14-redux/14-18-combining-multiple-reducers",permalink:"/hm/ru/courses/react-complete-guide/14-redux/14-18-combining-multiple-reducers",editUrl:"https://github.com/papa31/hm/edit/documentation/courses/react-complete-guide/14-redux/14-18-combining-multiple-reducers.md",tags:[],version:"current",lastUpdatedBy:"PaPa31",lastUpdatedAt:1631602446,formattedLastUpdatedAt:"14.09.2021",frontMatter:{id:"14-18-combining-multiple-reducers",title:"14.18 Combining Multiple Reducers",date:"2021-04-27T17:10:40.000Z"},sidebar:"Docs",previous:{title:"14.17 Outsourcing Action Types",permalink:"/hm/ru/courses/react-complete-guide/14-redux/14-17-outsourcing-action-types"},next:{title:"14.19 Understanding State Types",permalink:"/hm/ru/courses/react-complete-guide/14-redux/14-19-understanding-state-types"}},l=[{value:"<code>index.js</code>",id:"indexjs",children:[],level:2},{value:"<code>Counter.js</code>",id:"counterjs",children:[],level:2},{value:"New <code>counter.js</code>",id:"new-counterjs",children:[],level:2},{value:"New <code>result.js</code>",id:"new-resultjs",children:[],level:2},{value:"Remove <code>reducers.js</code>",id:"remove-reducersjs",children:[],level:2}],p={toc:l};function d(e){var t=e.components,n=(0,o.Z)(e,s);return(0,c.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"indexjs"},(0,c.kt)("inlineCode",{parentName:"h2"},"index.js")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="index.js" {4,8-14,16}',title:'"index.js"',"{4,8-14,16}":!0},'import React from "react";\nimport ReactDOM from "react-dom";\nimport { Provider } from "react-redux";\nimport { combineReducers, createStore } from "redux";\nimport App from "./App";\nimport "./index.css";\nimport registerServiceWorker from "./registerServiceWorker";\nimport counterReducer from "./store/reducers/counter";\nimport resultReducer from "./store/reducers/result";\n\nconst rootReducer = combineReducers({\n  ctr: counterReducer,\n  res: resultReducer,\n});\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById("root")\n);\nregisterServiceWorker();\n')),(0,c.kt)("h2",{id:"counterjs"},(0,c.kt)("inlineCode",{parentName:"h2"},"Counter.js")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Counter.js" {26-28,46-47,57-58}',title:'"Counter.js"',"{26-28,46-47,57-58}":!0},'import React, { Component } from "react";\nimport { connect } from "react-redux";\nimport CounterControl from "../../components/CounterControl/CounterControl";\nimport CounterOutput from "../../components/CounterOutput/CounterOutput";\nimport * as actionTypes from "../../store/actions";\n\nclass Counter extends Component {\n  render() {\n    return (\n      <div>\n        <CounterOutput value={this.props.ctr} />\n        <CounterControl\n          label="Increment"\n          clicked={this.props.onIncrementCounter}\n        />\n        <CounterControl\n          label="Decrement"\n          clicked={this.props.onDecrementCounter}\n        />\n        <CounterControl label="Add 5" clicked={this.props.onAddCounter} />\n        <CounterControl\n          label="Subtract 5"\n          clicked={this.props.onSubtractCounter}\n        />\n        <hr />\n        <button onClick={() => this.props.onStoreResult(this.props.ctr)}>\n          Store Result\n        </button>\n        <ul>\n          {this.props.storedResults.map((strResult) => (\n            <li\n              key={strResult.id}\n              onClick={() => this.props.onDeleteResult(strResult.id)}\n            >\n              {strResult.value}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ctr: state.ctr.counter,\n    storedResults: state.res.results,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIncrementCounter: () => dispatch({ type: actionTypes.INCREMENT }),\n    onDecrementCounter: () => dispatch({ type: actionTypes.DECREMENT }),\n    onAddCounter: () => dispatch({ type: actionTypes.ADD, value: 5 }),\n    onSubtractCounter: () => dispatch({ type: actionTypes.SUBTRACT, value: 5 }),\n    onStoreResult: (result) =>\n      dispatch({ type: actionTypes.STORE_RESULT, result: result }),\n    onDeleteResult: (id) =>\n      dispatch({ type: actionTypes.DELETE_RESULT, resultElId: id }),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n')),(0,c.kt)("h2",{id:"new-counterjs"},"New ",(0,c.kt)("inlineCode",{parentName:"h2"},"counter.js")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="counter.js" {}',title:'"counter.js"',"{}":!0},'import * as actionTypes from "../actions";\n\nconst initialState = {\n  counter: 0,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.INCREMENT:\n      const newState = Object.assign({}, state);\n      newState.counter = state.counter + 1;\n      return newState;\n    case actionTypes.DECREMENT:\n      return {\n        ...state,\n        counter: state.counter - 1,\n      };\n\n    case actionTypes.ADD:\n      return {\n        ...state,\n        counter: state.counter + action.value,\n      };\n\n    case actionTypes.SUBTRACT:\n      return {\n        ...state,\n        counter: state.counter - action.value,\n      };\n    default:\n  }\n  return state;\n};\n\nexport default reducer;\n')),(0,c.kt)("h2",{id:"new-resultjs"},"New ",(0,c.kt)("inlineCode",{parentName:"h2"},"result.js")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="result.js" {}',title:'"result.js"',"{}":!0},'import * as actionTypes from "../actions";\n\nconst initialState = {\n  results: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.STORE_RESULT:\n      return {\n        ...state,\n        results: state.results.concat({ id: new Date(), value: action.result }),\n      };\n    case actionTypes.DELETE_RESULT:\n      // const id = 2;\n      // const newArray = [...state.results];\n      // newArray.splice(id, 1);\n      const updatedArray = state.results.filter(\n        (result) => result.id !== action.resultElId\n      );\n      return {\n        ...state,\n        // results: newArray,\n        results: updatedArray,\n      };\n    default:\n  }\n  return state;\n};\n\nexport default reducer;\n')),(0,c.kt)("h2",{id:"remove-reducersjs"},"Remove ",(0,c.kt)("inlineCode",{parentName:"h2"},"reducers.js")))}d.isMDXComponent=!0}}]);