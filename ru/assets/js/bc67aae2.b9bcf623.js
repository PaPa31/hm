"use strict";(self.webpackChunkhuman_and_machine=self.webpackChunkhuman_and_machine||[]).push([[67387],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var o=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,s=function(e,t){if(null==e)return{};var n,o,s={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=s,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||r;return n?o.createElement(g,a(a({ref:t},c),{},{components:n})):o.createElement(g,a({ref:t},c))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,a=new Array(r);a[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:s,a[1]=i;for(var p=2;p<r;p++)a[p]=n[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},61660:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return u}});var o=n(87462),s=n(63366),r=(n(67294),n(3905)),a=["components"],i={id:"9-15-setting-default-global-configuration-for-axios",title:"9.15 Setting Default Global Configuration For Axios",date:new Date("2021-04-13T18:39:13.000Z")},l=void 0,p={unversionedId:"react-complete-guide/09-reaching-out-web-http-ajax/9-15-setting-default-global-configuration-for-axios",id:"react-complete-guide/09-reaching-out-web-http-ajax/9-15-setting-default-global-configuration-for-axios",title:"9.15 Setting Default Global Configuration For Axios",description:"index.js",source:"@site/courses/react-complete-guide/09-reaching-out-web-http-ajax/9-15-setting-default-global-configuration-for-axios.md",sourceDirName:"react-complete-guide/09-reaching-out-web-http-ajax",slug:"/react-complete-guide/09-reaching-out-web-http-ajax/9-15-setting-default-global-configuration-for-axios",permalink:"/hm/ru/courses/react-complete-guide/09-reaching-out-web-http-ajax/9-15-setting-default-global-configuration-for-axios",draft:!1,editUrl:"https://github.com/papa31/hm/edit/documentation/courses/react-complete-guide/09-reaching-out-web-http-ajax/9-15-setting-default-global-configuration-for-axios.md",tags:[],version:"current",lastUpdatedBy:"PaPa31",lastUpdatedAt:1631602446,formattedLastUpdatedAt:"14.09.2021",frontMatter:{id:"9-15-setting-default-global-configuration-for-axios",title:"9.15 Setting Default Global Configuration For Axios",date:"2021-04-13T18:39:13.000Z"},sidebar:"Courses",previous:{title:"9.14 Removing Interceptors",permalink:"/hm/ru/courses/react-complete-guide/09-reaching-out-web-http-ajax/9-14-removing-interceptors"},next:{title:"9.16 Creating And Using Axios Instances",permalink:"/hm/ru/courses/react-complete-guide/09-reaching-out-web-http-ajax/9-16-creating-and-using-axios-instances"}},c={},u=[{value:"index.js",id:"indexjs",level:2},{value:"FullPost.js",id:"fullpostjs",level:2},{value:"NewPost.js",id:"newpostjs",level:2},{value:"Blog.js",id:"blogjs",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,s.Z)(e,a);return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"indexjs"},"index.js"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="index.js" {8-10}',title:'"index.js"',"{8-10}":!0},'import axios from "axios";\nimport React from "react";\nimport ReactDOM from "react-dom";\nimport App from "./App";\nimport "./index.css";\nimport registerServiceWorker from "./registerServiceWorker";\n\naxios.defaults.baseURL = "https://jsonplaceholder.typicode.com";\naxios.defaults.headers["Authorization"] = "AUTH TOKEN";\naxios.defaults.headers.post["Content-Type"] = "application/json";\n\naxios.interceptors.request.use(\n  (request) => {\n    console.log(request);\n    // Edit request config\n    return request;\n  },\n  (error) => {\n    console.log(error);\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(\n  (response) => {\n    console.log(response);\n    // Edit response config\n    return response;\n  },\n  (error) => {\n    console.log(error);\n    return Promise.reject(error);\n  }\n);\n\nReactDOM.render(<App />, document.getElementById("root"));\nregisterServiceWorker();\n')),(0,r.kt)("h2",{id:"fullpostjs"},"FullPost.js"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="FullPost.js" {15,24}',title:'"FullPost.js"',"{15,24}":!0},'import axios from "axios";\nimport React, { Component } from "react";\nimport "./FullPost.css";\n\nclass FullPost extends Component {\n  state = {\n    loadedPost: null,\n  };\n  componentDidUpdate() {\n    if (this.props.id) {\n      if (\n        !this.state.loadedPost ||\n        (this.state.loadedPost && this.state.loadedPost.id !== this.props.id)\n      ) {\n        axios.get("/posts/" + this.props.id).then((response) => {\n          // console.log(response);\n          this.setState({ loadedPost: response.data });\n        });\n      }\n    }\n  }\n\n  deletePostHandler = () => {\n    axios.delete("/posts/" + this.props.id).then((response) => {\n      // console.log(response);\n    });\n  };\n  render() {\n    let post = <p style={{ textAlign: "center" }}>Please select a Post!</p>;\n\n    if (this.props.id) {\n      <p style={{ textAlign: "center" }}>Loading...!</p>;\n    }\n    if (this.state.loadedPost) {\n      post = (\n        <div className="FullPost">\n          <h1>{this.state.loadedPost.title}</h1>\n          <p>{this.state.loadedPost.body}</p>\n          <div className="Edit">\n            <button className="Delete" onClick={this.deletePostHandler}>\n              Delete\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return post;\n  }\n}\n\nexport default FullPost;\n')),(0,r.kt)("h2",{id:"newpostjs"},"NewPost.js"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="NewPost.js" {18}',title:'"NewPost.js"',"{18}":!0},'import axios from "axios";\nimport React, { Component } from "react";\nimport "./NewPost.css";\n\nclass NewPost extends Component {\n  state = {\n    title: "",\n    content: "",\n    author: "Pash",\n  };\n\n  postDataHandler = () => {\n    const post = {\n      title: this.state.title,\n      body: this.state.content,\n      author: this.state.author,\n    };\n    axios.post("/posts", post).then((response) => {\n      console.log(response);\n    });\n  };\n\n  render() {\n    return (\n      <div className="NewPost">\n        <h1>Add a Post</h1>\n        <label>Title</label>\n        <input\n          type="text"\n          value={this.state.title}\n          onChange={(event) => this.setState({ title: event.target.value })}\n        />\n        <label>Content</label>\n        <textarea\n          rows="4"\n          value={this.state.content}\n          onChange={(event) => this.setState({ content: event.target.value })}\n        />\n        <label>Author</label>\n        <select\n          value={this.state.author}\n          onChange={(event) => this.setState({ author: event.target.value })}\n        >\n          <option value="Pash">Pash</option>\n          <option value="Mash">Mash</option>\n          <option value="Chel">Chel</option>\n        </select>\n        <button onClick={this.postDataHandler}>Add Post</button>\n      </div>\n    );\n  }\n}\n\nexport default NewPost;\n')),(0,r.kt)("h2",{id:"blogjs"},"Blog.js"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Blog.js" {16}',title:'"Blog.js"',"{16}":!0},'import axios from "axios";\nimport React, { Component } from "react";\nimport FullPost from "../../components/FullPost/FullPost";\nimport NewPost from "../../components/NewPost/NewPost";\nimport Post from "../../components/Post/Post";\nimport "./Blog.css";\n\nclass Blog extends Component {\n  state = {\n    posts: [],\n    selectedPostId: null,\n    error: false,\n  };\n  componentDidMount() {\n    axios\n      .get("/posts")\n      .then((response) => {\n        const posts = response.data.slice(0, 4);\n        const updatedPosts = posts.map((post) => {\n          return {\n            ...post,\n            author: "Pash",\n          };\n        });\n        this.setState({ posts: updatedPosts });\n        //   console.log(response);\n      })\n      .catch((error) => {\n        // console.log(error);\n        this.setState({ error: true });\n      });\n  }\n\n  postSelectedHandler = (id) => {\n    this.setState({ selectedPostId: id });\n  };\n  render() {\n    let posts = <p style={{ textAlign: "center" }}>Something went wrong!</p>;\n    if (!this.state.error) {\n      posts = this.state.posts.map((post) => {\n        return (\n          <Post\n            key={post.id}\n            title={post.title}\n            author={post.author}\n            clicked={() => this.postSelectedHandler(post.id)}\n          />\n        );\n      });\n    }\n    return (\n      <div>\n        <section className="Posts">{posts}</section>\n        <section>\n          <FullPost id={this.state.selectedPostId} />\n        </section>\n        <section>\n          <NewPost />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Blog;\n')))}m.isMDXComponent=!0}}]);