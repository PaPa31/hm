"use strict";(self.webpackChunkhuman_and_machine=self.webpackChunkhuman_and_machine||[]).push([[57983],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),g=p(n),d=o,m=g["".concat(l,".").concat(d)]||g[d]||c[d]||a;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},51648:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return u},default:function(){return g}});var r=n(87462),o=n(63366),a=(n(67294),n(3905)),i=["components"],s={id:"11-27-working-with-guards",title:"11.27 Working With Guards",date:new Date("2021-04-17T16:50:46.000Z")},l=void 0,p={unversionedId:"react-complete-guide/11-multi-page-feeling-in-single-page-app-routing/11-27-working-with-guards",id:"react-complete-guide/11-multi-page-feeling-in-single-page-app-routing/11-27-working-with-guards",title:"11.27 Working With Guards",description:"Blog.js",source:"@site/courses/react-complete-guide/11-multi-page-feeling-in-single-page-app-routing/11-27-working-with-guards.md",sourceDirName:"react-complete-guide/11-multi-page-feeling-in-single-page-app-routing",slug:"/react-complete-guide/11-multi-page-feeling-in-single-page-app-routing/11-27-working-with-guards",permalink:"/hm/ru/courses/react-complete-guide/11-multi-page-feeling-in-single-page-app-routing/11-27-working-with-guards",editUrl:"https://github.com/papa31/hm/edit/documentation/courses/react-complete-guide/11-multi-page-feeling-in-single-page-app-routing/11-27-working-with-guards.md",tags:[],version:"current",lastUpdatedBy:"PaPa31",lastUpdatedAt:1631602446,formattedLastUpdatedAt:"14.09.2021",frontMatter:{id:"11-27-working-with-guards",title:"11.27 Working With Guards",date:"2021-04-17T16:50:46.000Z"},sidebar:"Docs",previous:{title:"11.26 Using History Prop To Redirect Replace",permalink:"/hm/ru/courses/react-complete-guide/11-multi-page-feeling-in-single-page-app-routing/11-26-using-history-prop-to-redirect-replace"},next:{title:"11.28 Handling 404 Case Unknown Routes",permalink:"/hm/ru/courses/react-complete-guide/11-multi-page-feeling-in-single-page-app-routing/11-28-handling-404-case-unknown-routes"}},u=[{value:"<code>Blog.js</code>",id:"blogjs",children:[],level:2},{value:"<code>NewPost.js</code>",id:"newpostjs",children:[],level:2}],c={toc:u};function g(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"blogjs"},(0,a.kt)("inlineCode",{parentName:"h2"},"Blog.js")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Blog.js" {9-11,49,51}',title:'"Blog.js"',"{9-11,49,51}":!0},'// import axios from "axios";\nimport React, { Component } from "react";\nimport { NavLink, Redirect, Route, Switch } from "react-router-dom";\nimport "./Blog.css";\nimport NewPost from "./NewPost/NewPost";\nimport Posts from "./Posts/Posts";\n\nclass Blog extends Component {\n  state = {\n    auth: false,\n  };\n  render() {\n    return (\n      <div className="Blog">\n        <header>\n          <nav>\n            <ul>\n              <li>\n                <NavLink\n                  to="/posts/"\n                  exact\n                  activeClassName="my-active"\n                  activeStyle={{\n                    color: "#fa923f",\n                    textDecoration: "underline",\n                  }}\n                >\n                  Posts\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to={{\n                    pathname: "/new-post",\n                    hash: "#submit",\n                    search: "?quick-submit=true",\n                  }}\n                >\n                  New Post\n                </NavLink>\n              </li>\n            </ul>\n          </nav>\n        </header>\n        {/* <Route path="/" exact render={() => <h1>Home</h1>} />\n        <Route path="/" render={() => <h1>Home2</h1>} /> */}\n\n        <Switch>\n          {this.state.auth ? (\n            <Route path="/new-post" component={NewPost} />\n          ) : null}\n\n          <Route path="/posts" component={Posts} />\n          <Redirect from="/" to="/posts" />\n          {/* <Route path="/" component={Posts} /> */}\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Blog;\n')),(0,a.kt)("h2",{id:"newpostjs"},(0,a.kt)("inlineCode",{parentName:"h2"},"NewPost.js")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="NewPost.js" {14}',title:'"NewPost.js"',"{14}":!0},'import axios from "axios";\nimport React, { Component } from "react";\nimport { Redirect } from "react-router-dom";\nimport "./NewPost.css";\n\nclass NewPost extends Component {\n  state = {\n    title: "",\n    content: "",\n    author: "Pash",\n    submitted: false,\n  };\n  componentDidMount() {\n    // if unauth => this.props.history.replace("/posts");\n    console.log(this.props);\n  }\n  postDataHandler = () => {\n    const post = {\n      title: this.state.title,\n      body: this.state.content,\n      author: this.state.author,\n    };\n    axios.post("/posts", post).then((response) => {\n      console.log(response);\n      this.props.history.replace("/posts");\n      // this.setState({ submitted: true });\n    });\n  };\n\n  render() {\n    let redirect = null;\n    if (this.state.submitted) {\n      redirect = <Redirect to="/posts" />;\n    }\n    return (\n      <div className="NewPost">\n        {redirect}\n        <h1>Add a Post</h1>\n        <label>Title</label>\n        <input\n          type="text"\n          value={this.state.title}\n          onChange={(event) => this.setState({ title: event.target.value })}\n        />\n        <label>Content</label>\n        <textarea\n          rows="4"\n          value={this.state.content}\n          onChange={(event) => this.setState({ content: event.target.value })}\n        />\n        <label>Author</label>\n        <select\n          value={this.state.author}\n          onChange={(event) => this.setState({ author: event.target.value })}\n        >\n          <option value="Pash">Pash</option>\n          <option value="Mash">Mash</option>\n          <option value="Chel">Chel</option>\n        </select>\n        <button onClick={this.postDataHandler}>Add Post</button>\n      </div>\n    );\n  }\n}\n\nexport default NewPost;\n')))}g.isMDXComponent=!0}}]);