"use strict";(self.webpackChunkhuman_and_machine=self.webpackChunkhuman_and_machine||[]).push([[52328],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),d=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=d(e.components);return a.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=d(t),m=r,h=u["".concat(s,".").concat(m)]||u[m]||c[m]||o;return t?a.createElement(h,i(i({ref:n},p),{},{components:t})):a.createElement(h,i({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=t[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},23567:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var a=t(87462),r=(t(67294),t(3905)),o=t(34259),i=t(18679);const l={title:"nvs: One Node Version Per Terminal in Windows",authors:["papa31"],tags:["nvs","node"],date:new Date("2021-09-19T13:47:35.000Z"),decription:"Install and setup nvs to Windows for PowerShell and Git-Bash",draft:!1},s=void 0,d={permalink:"/hm/blog/2021/09/19/nvs-one-node-version-per-terminal-in-windows",editUrl:"https://github.com/papa31/hm/edit/documentation/blog/2021-09-19-nvs-one-node-version-per-terminal-in-windows.mdx",source:"@site/blog/2021-09-19-nvs-one-node-version-per-terminal-in-windows.mdx",title:"nvs: One Node Version Per Terminal in Windows",description:"I tried setting up the better known nvm-windows to automatically change the node version. But unsuccessfully!",date:"2021-09-19T13:47:35.000Z",formattedDate:"September 19, 2021",tags:[{label:"nvs",permalink:"/hm/blog/tags/nvs"},{label:"node",permalink:"/hm/blog/tags/node"}],readingTime:2.91,hasTruncateMarker:!0,authors:[{name:"papa31",url:"https://github.com/papa31",imageURL:"https://github.com/papa31.png",key:"papa31"}],frontMatter:{title:"nvs: One Node Version Per Terminal in Windows",authors:["papa31"],tags:["nvs","node"],date:"2021-09-19T13:47:35.000Z",decription:"Install and setup nvs to Windows for PowerShell and Git-Bash",draft:!1},prevItem:{title:"Where Google Photos Hides Direct Links to Your Uploaded Images",permalink:"/hm/blog/2021/10/05/where-google-photos-hides-direct-links-to-your-uploaded-images"},nextItem:{title:"Docusaurus: Test & Build",permalink:"/hm/blog/2020/12/23/docusaurus-test-and-build"}},p={authorsImageUrls:[void 0]},c=[{value:"Remove nvm-windows",id:"remove-nvm-windows",level:2},{value:"Install nvs",id:"install-nvs",level:2},{value:"Adding node versions",id:"adding-node-versions",level:2},{value:"Setting the default node version",id:"setting-the-default-node-version",level:2},{value:"Setup Git-Bash",id:"setup-git-bash",level:2},{value:"nvs Basic Usage",id:"nvs-basic-usage",level:2},{value:"Manual switching using <code>.nvmrc</code>",id:"manual-switching-using-nvmrc",level:2},{value:"Check Switching Ability",id:"check-switching-ability",level:2}],u={toc:c};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"I tried setting up the better known ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/coreybutler/nvm-windows"},"nvm-windows")," to automatically change the ",(0,r.kt)("inlineCode",{parentName:"p"},"node")," version. But unsuccessfully!"),(0,r.kt)("p",null,"When I used to run ",(0,r.kt)("inlineCode",{parentName:"p"},"nvm use")," the node version changed globally."),(0,r.kt)("p",null,"I have read about ",(0,r.kt)("a",{href:"https://github.com/jasongin/nvs#automatic-switching-per-directory",class:"external"},"nvs: Automatic Switching Per Directory (github.com)")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"nvs readme file")," and decided to give it a try."),(0,r.kt)("h2",{id:"remove-nvm-windows"},"Remove nvm-windows"),(0,r.kt)("p",null,"Go to ",(0,r.kt)("inlineCode",{parentName:"p"},"C:\\Users\\[username]\\AppData\\Roaming\\nvm")," and run ",(0,r.kt)("inlineCode",{parentName:"p"},"unins000.exe")," by double clicking it."),(0,r.kt)("h2",{id:"install-nvs"},"Install nvs"),(0,r.kt)("p",null,"I downloaded the ",(0,r.kt)("a",{href:"https://github.com/jasongin/nvs/releases/tag/v1.6.0",class:"external"},"nvs-1.6.0.msi")," version of ",(0,r.kt)("inlineCode",{parentName:"p"},"nvs")," and then ran this file by double clicking on it."),(0,r.kt)("h2",{id:"adding-node-versions"},"Adding node versions"),(0,r.kt)("p",null,"To add a specific ",(0,r.kt)("inlineCode",{parentName:"p"},"node")," version, run ",(0,r.kt)("inlineCode",{parentName:"p"},"nvs add")," with the version number:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},"\u276f nvs add 12.21.0\nAdding: node/12.21.0/x64\nExtracting  [###########################] 100%\nPATH += $env:LOCALAPPDATA\\nvs\\node\\12.21.0\\x64\n")),(0,r.kt)("h2",{id:"setting-the-default-node-version"},"Setting the default node version"),(0,r.kt)("p",null,"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"nvs link")," with the version number:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},"nvs link 12.21.0\n")),(0,r.kt)("h2",{id:"setup-git-bash"},"Setup Git-Bash"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"Git-Bash")," is my fallback. It allows the use Unix command sintax.")),(0,r.kt)("p",null,"Add to ",(0,r.kt)("inlineCode",{parentName:"p"},"C:\\Users\\[username]\\.bash_profile")," these two lines:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=".bash_profile"',title:'".bash_profile"'},"if [ -f ~/.bashrc ]; then . ~/.bashrc; fi\n")),(0,r.kt)("p",null,"Add to ",(0,r.kt)("inlineCode",{parentName:"p"},"C:\\Users\\[username]\\.bashrc")," these lines (if this file is missing, create it in ",(0,r.kt)("inlineCode",{parentName:"p"},"notepad"),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=".bashrc"',title:'".bashrc"'},'function setupNvs {\n    export NVS_HOME="$LOCALAPPDATA\\\\nvs";\n    [ -s "$NVS_HOME/nvs.sh" ] && source "$NVS_HOME/nvs.sh" >> /dev/null;\n    return 0;\n}\nsetupNvs\n')),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Look at th line ",(0,r.kt)("inlineCode",{parentName:"p"},'export NVS_HOME="$LOCALAPPDATA\\\\nvs";')," this is where ",(0,r.kt)("inlineCode",{parentName:"p"},"windows env")," (%LOCALAPPDATA%\\nvs) is converted to ",(0,r.kt)("inlineCode",{parentName:"p"},"unix env"),". In case of error see for example: ",(0,r.kt)("a",{href:"https://superuser.com/questions/1284276/how-to-use-localappdata-with-git-bash-in-windows",class:"external"},"superuser.com: How To Use Localappdata With Git Bash In Windows"))),(0,r.kt)("h2",{id:"nvs-basic-usage"},"nvs Basic Usage"),(0,r.kt)("p",null,"Open ",(0,r.kt)("inlineCode",{parentName:"p"},"PowerShell")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"Git-Bash")," terminal."),(0,r.kt)("p",null,"Let's create two project folders with two different ",(0,r.kt)("inlineCode",{parentName:"p"},".nvmrc")," files using these commands:"),(0,r.kt)(o.Z,{defaultValue:"powershell",values:[{label:"PowerShell",value:"powershell"},{label:"Git-Bash",value:"gitbash"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"powershell",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},'cd ~\nmkdir one\ncd one\n"10.24.0" | Out-File .nvmrc     # create .nvmrc file with node version\n[string]::Join( "`n", (gc .nvmrc)) | sc .nvmrc  # convert the line above from Windows to Unix\n\ncd ~\nmkdir two\ncd two\n"14.16.0" | Out-File .nvmrc     # create .nvmrc file with node version\n[string]::Join( "`n", (gc .nvmrc)) | sc .nvmrc  # convert the line above from Windows to Unix\n'))),(0,r.kt)(i.Z,{value:"gitbash",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'cd ~\nmkdir one\ncd one\necho "10.24.0" > .nvmrc     # create .nvmrc file with node version\n\ncd ~\nmkdir two\ncd two\necho "14.16.0" > .nvmrc     # create .nvmrc file with node version\n')))),(0,r.kt)("h2",{id:"manual-switching-using-nvmrc"},"Manual switching using ",(0,r.kt)("inlineCode",{parentName:"h2"},".nvmrc")),(0,r.kt)("p",null,"Let's go to the project ",(0,r.kt)("inlineCode",{parentName:"p"},"one")," and run ",(0,r.kt)("inlineCode",{parentName:"p"},"nvs auto")," (in ",(0,r.kt)("inlineCode",{parentName:"p"},"PowerShell")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"Git-Bash"),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},"\u276f nvs auto\nPATH -= $env:LOCALAPPDATA\\nvs\\default\nPATH += $env:LOCALAPPDATA\\nvs\\node\\10.24.0\\x64\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If everything is ok, ",(0,r.kt)("inlineCode",{parentName:"p"},"nvs")," will automatically download the correct ",(0,r.kt)("inlineCode",{parentName:"p"},"node")," version and activate it.")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"In case of an error, you may need to edit or replace this line:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-powershell",metastring:'title="PowerShell"',title:'"PowerShell"'},'[string]::Join( "`n", (gc .nvmrc)) | sc .nvmrc\n')),(0,r.kt)("p",{parentName:"admonition"},"source: ",(0,r.kt)("a",{href:"https://stackoverflow.com/questions/5102115/unix-format-files-with-powershell",class:"external"},"stackoverflow.com: Unix Format Files With Powershell"))),(0,r.kt)("p",null,"Then open second terminal, go to the project ",(0,r.kt)("inlineCode",{parentName:"p"},"two")," folder and again run ",(0,r.kt)("inlineCode",{parentName:"p"},"nvs auto"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},"\u276f nvs auto\nPATH -= $env:LOCALAPPDATA\\nvs\\default\nPATH += $env:LOCALAPPDATA\\nvs\\node\\14.16.0\\x64\n")),(0,r.kt)("p",null,"Again, ",(0,r.kt)("inlineCode",{parentName:"p"},"nvs")," install the required node version and then change the ",(0,r.kt)("inlineCode",{parentName:"p"},"environment variable")," to use it."),(0,r.kt)("h2",{id:"check-switching-ability"},"Check Switching Ability"),(0,r.kt)("p",null,"Check the version of node in the folder ",(0,r.kt)("inlineCode",{parentName:"p"},"one"),"  (in first terminal):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},"\u276f node -v\nv10.24.0\n")),(0,r.kt)("p",null,"Check the node version in the folder ",(0,r.kt)("inlineCode",{parentName:"p"},"two")," (in second terminal):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\u276f node -v\n14.26.0\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Hence, ",(0,r.kt)("inlineCode",{parentName:"p"},"nvs")," changes the node versions locally, one node version per terminal.")),(0,r.kt)("p",null,"Which was required to check."))}m.isMDXComponent=!0},18679:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(67294),r=t(86010);const o="tabItem_Ymn6";function i(e){let{children:n,hidden:t,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,i),hidden:t},n)}},34259:(e,n,t)=>{t.d(n,{Z:()=>m});var a=t(87462),r=t(67294),o=t(86010),i=t(51048),l=t(33609),s=t(1943),d=t(72957);const p="tabList__CuJ",c="tabItem_LNqP";function u(e){var n;const{lazy:t,block:i,defaultValue:u,values:m,groupId:h,className:v}=e,k=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=m??k.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),f=(0,l.l)(g,((e,n)=>e.value===n.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===u?u:u??(null==(n=k.find((e=>e.props.default)))?void 0:n.props.value)??k[0].props.value;if(null!==b&&!g.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:w,setTabGroupChoices:N}=(0,s.U)(),[y,C]=(0,r.useState)(b),A=[],{blockElementScrollPositionUntilNextRender:T}=(0,d.o5)();if(null!=h){const e=w[h];null!=e&&e!==y&&g.some((n=>n.value===e))&&C(e)}const P=e=>{const n=e.currentTarget,t=A.indexOf(n),a=g[t].value;a!==y&&(T(n),C(a),null!=h&&N(h,String(a)))},O=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{const n=A.indexOf(e.currentTarget)+1;t=A[n]??A[0];break}case"ArrowLeft":{const n=A.indexOf(e.currentTarget)-1;t=A[n]??A[A.length-1];break}}null==(n=t)||n.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":i},v)},g.map((e=>{let{value:n,label:t,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:y===n?0:-1,"aria-selected":y===n,key:n,ref:e=>A.push(e),onKeyDown:O,onFocus:P,onClick:P},i,{className:(0,o.Z)("tabs__item",c,null==i?void 0:i.className,{"tabs__item--active":y===n})}),t??n)}))),t?(0,r.cloneElement)(k.filter((e=>e.props.value===y))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},k.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==y})))))}function m(e){const n=(0,i.Z)();return r.createElement(u,(0,a.Z)({key:String(n)},e))}}}]);