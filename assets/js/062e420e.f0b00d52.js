"use strict";(self.webpackChunkhuman_and_machine=self.webpackChunkhuman_and_machine||[]).push([[30734],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,g=p["".concat(s,".").concat(m)]||p[m]||d[m]||l;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,i=new Array(l);i[0]=p;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var c=2;c<l;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},78401:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var r=n(87462),o=n(63366),l=(n(67294),n(3905)),i=["components"],a={id:"8-17-connecting-state-to-build-controls",title:"8.17 Connecting State To Build Controls",date:new Date("2021-04-10T18:09:33.000Z")},s=void 0,c={unversionedId:"react-complete-guide/08-real-app-burger-builder/8-17-connecting-state-to-build-controls",id:"react-complete-guide/08-real-app-burger-builder/8-17-connecting-state-to-build-controls",isDocsHomePage:!1,title:"8.17 Connecting State To Build Controls",description:"BurgerBuilder.js",source:"@site/courses/react-complete-guide/08-real-app-burger-builder/8-17-connecting-state-to-build-controls.md",sourceDirName:"react-complete-guide/08-real-app-burger-builder",slug:"/react-complete-guide/08-real-app-burger-builder/8-17-connecting-state-to-build-controls",permalink:"/hm/courses/react-complete-guide/08-real-app-burger-builder/8-17-connecting-state-to-build-controls",editUrl:"https://github.com/papa31/hm/edit/documentation/courses/react-complete-guide/08-real-app-burger-builder/8-17-connecting-state-to-build-controls.md",tags:[],version:"current",lastUpdatedBy:"PaPa31",lastUpdatedAt:1631602446,formattedLastUpdatedAt:"9/14/2021",frontMatter:{id:"8-17-connecting-state-to-build-controls",title:"8.17 Connecting State To Build Controls",date:"2021-04-10T18:09:33.000Z"},sidebar:"Docs",previous:{title:"8.16 Outputting Multiple Build Controls",permalink:"/hm/courses/react-complete-guide/08-real-app-burger-builder/8-16-outputting-multiple-build-controls"},next:{title:"8.18 Removing Igredients Safely",permalink:"/hm/courses/react-complete-guide/08-real-app-burger-builder/8-18-removing-igredients-safely"}},u=[{value:"BurgerBuilder.js",id:"burgerbuilderjs",children:[]},{value:"BuildControls.js",id:"buildcontrolsjs",children:[]},{value:"BuildControl.js",id:"buildcontroljs",children:[]}],d={toc:u};function p(e){var t=e.components,n=(0,o.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"burgerbuilderjs"},"BurgerBuilder.js"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="BurgerBuilder.js" {5-10,24-37,40-42}',title:'"BurgerBuilder.js"',"{5-10,24-37,40-42}":!0},'import React, { Component, Fragment } from "react";\nimport BuildControls from "../components/Burger/BuildControls/BuildControls";\nimport Burger from "../components/Burger/Burger";\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7,\n};\n\nclass BurgerBuilder extends Component {\n  // constructor(props) {\n  //     super(props);\n  //     this.state = {...}\n  // }\n  state = {\n    ingredients: {\n      salad: 0,\n      bacon: 0,\n      cheese: 0,\n      meat: 0,\n    },\n    totalPrice: 4,\n  };\n\n  addIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    const updateCount = oldCount + 1;\n    const updatedIngredients = {\n      ...this.state.ingredients,\n    };\n    updatedIngredients[type] = updateCount;\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice + priceAddition;\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n  };\n\n  removeIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Burger ingredients={this.state.ingredients} />\n        <BuildControls ingredientAdded={this.addIngredientHandler} />\n      </Fragment>\n    );\n  }\n}\nexport default BurgerBuilder;\n')),(0,l.kt)("h2",{id:"buildcontrolsjs"},"BuildControls.js"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="BuildControls.js" {14-17}',title:'"BuildControls.js"',"{14-17}":!0},'import React from "react";\nimport BuildControl from "./BuildControl/BuildControl";\nimport classes from "./BuildControls.module.css";\nconst controls = [\n  { label: "Salad", type: "salad" },\n  { label: "Bacon", type: "bacon" },\n  { label: "Cheese", type: "cheese" },\n  { label: "Meat", type: "meat" },\n];\n\nconst buildControls = (props) => (\n  <div className={classes.BuildControls}>\n    {controls.map((ctrl) => (\n      <BuildControl\n        key={ctrl.label}\n        label={ctrl.label}\n        added={() => props.ingredientAdded(ctrl.type)}\n      />\n    ))}\n  </div>\n);\n\nexport default buildControls;\n')),(0,l.kt)("h2",{id:"buildcontroljs"},"BuildControl.js"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="BuildControl.js" {8-10}',title:'"BuildControl.js"',"{8-10}":!0},'import React from "react";\nimport classes from "./BuildControl.module.css";\n\nconst buildControl = (props) => (\n  <div className={classes.BuildControl}>\n    <div className={classes.Label}>{props.label}</div>\n    <button className={classes.Less}>Less</button>\n    <button className={classes.More} onClick={props.added}>\n      More\n    </button>\n  </div>\n);\n\nexport default buildControl;\n')))}p.isMDXComponent=!0}}]);