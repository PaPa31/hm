"use strict";(self.webpackChunkhuman_and_machine=self.webpackChunkhuman_and_machine||[]).push([[45774],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,k=d["".concat(p,".").concat(m)]||d[m]||c[m]||l;return n?a.createElement(k,i(i({ref:t},u),{},{components:n})):a.createElement(k,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},31438:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const l={id:"kde-klipper-regex",title:"KDE Klipper Regex",date:new Date("2021-03-13T22:35:53.000Z")},i=void 0,o={unversionedId:"workplace/linux/kde-klipper-regex",id:"workplace/linux/kde-klipper-regex",title:"KDE Klipper Regex",description:"Right click on Klipper icon > Open Configure > Actions > + Add Action",source:"@site/docs/workplace/linux/kde-klipper-regex.md",sourceDirName:"workplace/linux",slug:"/workplace/linux/kde-klipper-regex",permalink:"/hm/docs/workplace/linux/kde-klipper-regex",draft:!1,editUrl:"https://github.com/papa31/hm/edit/documentation/docs/workplace/linux/kde-klipper-regex.md",tags:[],version:"current",lastUpdatedBy:"PaPa31",lastUpdatedAt:1662229845,formattedLastUpdatedAt:"Sep 3, 2022",frontMatter:{id:"kde-klipper-regex",title:"KDE Klipper Regex",date:"2021-03-13T22:35:53.000Z"},sidebar:"Docs",previous:{title:"Drawing on the desktop in Linux KDE Plasma",permalink:"/hm/docs/workplace/linux/draw-in-linux-kde-plasma"},next:{title:"Linux Render Video To mp4",permalink:"/hm/docs/workplace/linux/linux-render-video-to-mp4"}},p={},s=[{value:"Simple Translation",id:"simple-translation",level:2},{value:"Auto Detect Language Traslation",id:"auto-detect-language-traslation",level:2},{value:"Squeeze annoying spaces and newlines",id:"squeeze-annoying-spaces-and-newlines",level:2},{value:"Remove Subtitle Timers",id:"remove-subtitle-timers",level:2},{value:"Clear &amp; Translate",id:"clear--translate",level:2},{value:"Sources",id:"sources",level:2}],u={toc:s};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Right click on Klipper icon > Open Configure > Actions > + Add Action"),(0,r.kt)("h2",{id:"simple-translation"},"Simple Translation"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Description (for edit):"),(0,r.kt)("li",{parentName:"ul"},"Command:"),(0,r.kt)("li",{parentName:"ul"},"Output Handling: ",(0,r.kt)("inlineCode",{parentName:"li"},"Add to Clipboard")),(0,r.kt)("li",{parentName:"ul"},"Description (for Ctrl+Alt+R menu):")),(0,r.kt)("h2",{id:"auto-detect-language-traslation"},"Auto Detect Language Traslation"),(0,r.kt)("h2",{id:"squeeze-annoying-spaces-and-newlines"},"Squeeze annoying spaces and newlines"),(0,r.kt)("h2",{id:"remove-subtitle-timers"},"Remove Subtitle Timers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Description: ",(0,r.kt)("inlineCode",{parentName:"p"},"remove subtitle timers"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Command:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"echo %s | sed  's/^[0-9][^A-Za-z]*$//' | sed ':a;N;$!ba;s/\\(.\\)\\n\\n/\\1 /g' | sed ':a;N;$!ba;s/\\n//g'\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Explanation: simple and GNU sed"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"First sed removes all the digits before each text block."),(0,r.kt)("li",{parentName:"ol"},"Then two GNU sed follow. They read the whole fragment in a loop (':a;N;$!ba). And the first one removes the double /n before each text block. And the second one is after text block.")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Output Handling: ",(0,r.kt)("inlineCode",{parentName:"p"},"Add to Clipboard"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Description: ",(0,r.kt)("inlineCode",{parentName:"p"},"Remove Subtitle Timers")))),(0,r.kt)("p",null,"Copy the snippet with timer encoding from any .srt file:"),(0,r.kt)("details",null,(0,r.kt)("summary",null,".srt fragment"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"1\n00:00:04,190 --\x3e 00:00:08,120\nHi there, welcome ethereal and Solidity Development Chorus Preview.\n\n2\n00:00:08,150 --\x3e 00:00:10,670\nMy name is Phillip and I love your instructor.\n\n3\n00:00:11,030 --\x3e 00:00:16,220\nNow let's take a look at what you are going to build in this course, and after that, I will be talking\n\n4\n00:00:16,220 --\x3e 00:00:20,380\nabout the requirements and features you are going to work on.\n"))),(0,r.kt)("p",null,"and press Ctrl+Alt+R > Select Remove Subtitle. Then hover your mouse over Clipboard icon. You have to see:"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Result"),"Hi there, welcome ethereal and Solidity Development Chorus Preview. My name is Phillip and I love your instructor. Now let's take a look at what you are going to build in this course, and after that, I will be talking about the requirements and features you are going to work on."),(0,r.kt)("h2",{id:"clear--translate"},"Clear & Translate"),(0,r.kt)("p",null,"This command first clears the line, and then translates it:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Description: ",(0,r.kt)("inlineCode",{parentName:"p"},"clear & translate"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Command:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"translate en ru $(echo %s | sed  's/^[0-9][^A-Za-z]*$//' | sed ':a;N;$!ba;s/\\(.\\)\\n\\n/\\1 /g' | sed ':a;N;$!ba;s/\\n//g' )\n")))),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"We have now redirected the above output to a variable.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Output Handling: ",(0,r.kt)("inlineCode",{parentName:"p"},"Add to Clipboard"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Description: ",(0,r.kt)("inlineCode",{parentName:"p"},"Clear & Translate")))),(0,r.kt)("p",null,"Read more: ",(0,r.kt)("a",{href:"https://stackoverflow.com/questions/2559076/how-do-i-redirect-output-to-a-variable-in-shell",class:"external"},"stackoverflow.com: How Do I Redirect Output To A Variable In Shell")),(0,r.kt)("h2",{id:"sources"},"Sources"),(0,r.kt)("p",null,"GNU ",(0,r.kt)("inlineCode",{parentName:"p"},"sed"),":",(0,r.kt)("a",{href:"https://stackoverflow.com/questions/1251999/how-can-i-replace-a-newline-n-using-sed",class:"external"},"stackoverflow.com")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Klipper")," example: ",(0,r.kt)("a",{href:"https://www.linux-magazine.com/Online/Blogs/Productivity-Sauce/Use-Klipper-Clipboard-Actions-for-Better-Productivity",class:"external"},"linux-magazine.com: Use Klipper Clipboard Actions For Better Productivity")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Klipper")," docs:",(0,r.kt)("a",{href:"https://docs.kde.org/stable5/en/plasma-workspace/klipper/actions-page.html",class:"external"},"docs.kde.org: Actions Page")))}c.isMDXComponent=!0}}]);