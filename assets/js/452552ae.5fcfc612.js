"use strict";(self.webpackChunkhuman_and_machine=self.webpackChunkhuman_and_machine||[]).push([[63419],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(n),m=i,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(h,s(s({ref:t},p),{},{components:n})):r.createElement(h,s({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,s=new Array(a);s[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},10201:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var r=n(87462),i=n(63366),a=(n(67294),n(3905)),s=["components"],o={},l=void 0,c={unversionedId:"shells/commands/sed/sed-my-experience",id:"shells/commands/sed/sed-my-experience",isDocsHomePage:!1,title:"sed-my-experience",description:"Once upon a time I found this page:",source:"@site/docs/shells/commands/sed/sed-my-experience.md",sourceDirName:"shells/commands/sed",slug:"/shells/commands/sed/sed-my-experience",permalink:"/hm/docs/shells/commands/sed/sed-my-experience",editUrl:"https://github.com/papa31/hm/edit/documentation/docs/shells/commands/sed/sed-my-experience.md",tags:[],version:"current",lastUpdatedBy:"papa",lastUpdatedAt:1615540687,formattedLastUpdatedAt:"3/12/2021",frontMatter:{},sidebar:"Docs",previous:{title:"regex-in-bash",permalink:"/hm/docs/shells/bash/regex-in-bash"},next:{title:"rm",permalink:"/hm/docs/shells/powershell/rm"}},p=[{value:"Initial file",id:"initial-file",children:[]},{value:"Edit with <code>sed</code> &amp; Regular Expressions",id:"edit-with-sed--regular-expressions",children:[]},{value:"Resulting file",id:"resulting-file",children:[]}],d={toc:p};function u(e){var t=e.components,n=(0,i.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Once upon a time I found this page:\n",(0,a.kt)("a",{parentName:"p",href:"http://sethrobertson.github.io/GitBestPractices/"},"http://sethrobertson.github.io/GitBestPractices/"),"\nfrom this ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/SethRobertson/GitBestPractices"},"repo"),"."),(0,a.kt)("h2",{id:"initial-file"},"Initial file"),(0,a.kt)("p",null,"I downloaded it from the repo's ",(0,a.kt)("inlineCode",{parentName:"p"},"gh-pages")," ",(0,a.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/SethRobertson/GitBestPractices/gh-pages/index.md"},"branch")," and saved as ",(0,a.kt)("inlineCode",{parentName:"p"},"git-best-initial.md")),(0,a.kt)("p",null,"After grabbing via Web Clipper (Chrome browser plugin), this file needed to be edited. The ",(0,a.kt)("strong",{parentName:"p"},"Table of Content")," links in this file do not work correctly, and some code blocks look ugly."),(0,a.kt)("h2",{id:"edit-with-sed--regular-expressions"},"Edit with ",(0,a.kt)("inlineCode",{parentName:"h2"},"sed")," & Regular Expressions"),(0,a.kt)("p",null,"Initially I was processing the file along with the TOC (Table Of Content):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cat git-best-initial.md | sed -e 's/ \\/>/><\\/a>/g' -e 's/\\* \\(\\w.*$\\)/\\* **\\1**/g' -e 's/^    //g' -e 's/^### /### \\&emsp; /g' | less\n")),(0,a.kt)("p",null,"But then I deleted the TOC because it is automatically generated by Docusaurus (from the h2 & h3 headers) and simplified the code a bit:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cat git-best-initial.md | sed -e 's/\\*   \\(.*$\\)/\\* **\\1**/g' -e 's/^### /### \\&emsp; /g' > result.md\n")),(0,a.kt)("h2",{id:"resulting-file"},"Resulting file"),(0,a.kt)("p",null,"Finally I manually edited the resulting file and got this:"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../../../workplace/git/git-best-practicies"},"Git Best Practices")))}u.isMDXComponent=!0}}]);