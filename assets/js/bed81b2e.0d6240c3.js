"use strict";(self.webpackChunkhuman_and_machine=self.webpackChunkhuman_and_machine||[]).push([[61324],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>u});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=p(n),u=r,b=d["".concat(c,".").concat(u)]||d[u]||m[u]||o;return n?a.createElement(b,i(i({ref:t},l),{},{components:n})):a.createElement(b,i({ref:t},l))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},78084:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={id:"objects",title:"Objects",date:new Date("2021-03-06T13:11:10.000Z")},i=void 0,s={unversionedId:"javascript/objects",id:"javascript/objects",title:"Objects",description:"Everything is Object",source:"@site/docs/javascript/objects.md",sourceDirName:"javascript",slug:"/javascript/objects",permalink:"/hm/docs/javascript/objects",draft:!1,editUrl:"https://github.com/papa31/hm/edit/documentation/docs/javascript/objects.md",tags:[],version:"current",lastUpdatedBy:"PaPa31",lastUpdatedAt:1662229845,formattedLastUpdatedAt:"Sep 3, 2022",frontMatter:{id:"objects",title:"Objects",date:"2021-03-06T13:11:10.000Z"},sidebar:"Docs",previous:{title:"Var & Let & Const",permalink:"/hm/docs/javascript/next-generation/var-let-const"},next:{title:"8 Mar\u0441h Order",permalink:"/hm/docs/location/Lvovskaya-2020-2021/8-mar\u0441h-order"}},c={},p=[{value:"Everything is Object",id:"everything-is-object",level:2},{value:"Initialization &amp; creation",id:"initialization--creation",level:2}],l={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"everything-is-object"},"Everything is Object"),(0,r.kt)("p",null,"Everything (bar core types) in JavaScript is an object. Hash table lookups are time consuming in any JavaScript program."),(0,r.kt)("p",null,"JavaScript object are collection of name-value pairs ",(0,r.kt)("inlineCode",{parentName:"p"},"{name: 'Max'}"),"."),(0,r.kt)("h2",{id:"initialization--creation"},"Initialization & creation"),(0,r.kt)("p",null,"Two basic ways of object initialization:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var obj = new Object();\n//or\nvar obj = {}; // object literal syntax\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"var obj = {}")," is the object literal syntax. It is preferred."),(0,r.kt)("p",null,"Initialization on creation via object literal syntax:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var obj = {\n  name: 'Carrot',\n  _for: 'Max', // 'for' is a reserved word, use '_for' instead.\n  details: {\n    color: 'orange',\n    size: 12,\n  },\n};\n\nobj.details.color; // orange\nobj['details']['size']; // 12\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"Starting ES5, you can use reserved words (like ",(0,r.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"for"),", see above) as an object property name. Even without the quotes. :::"),(0,r.kt)("p",{parentName:"admonition"},"Since functions are objects too, you can first create a prototype (",(0,r.kt)("strong",{parentName:"p"},"Person"),") via ",(0,r.kt)("em",{parentName:"p"},"function")," and define a new instance (",(0,r.kt)("strong",{parentName:"p"},"you"),"):"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function Person(name, age) {\n  this.name = name;\n  this.age = age;\n}\n\n// Define an object\nvar you = new Person('You', 24);\n// We are creating a new person named \"You\" aged 24.\n")),(0,r.kt)("h2",{parentName:"admonition",id:"access"},"Access"),(0,r.kt)("p",{parentName:"admonition"},"Once created, an object properties can be accessed in one of two ways:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// dot notation\nobj.name = 'Simon';\nvar name = obj.name;\n\n// bracket notation\nobj['name'] = 'Simon';\nvar name = obj['name'];\n// can use a variable to define a key\nvar user = prompt('what is your key?');\nobj[user] = prompt('what is its value?');\n"))),(0,r.kt)("admonition",{title:"But this method prevents some JavaScript engine and minifier optimizations being applied. :::",type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"Starting ES6, you can define the object keys with variables at creation:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let param = 'size';\nlet config = {\n  [param]: 12,\n  ['mobile' + param.charAt(0).toUpperCase() + param.slice(1)]: 4,\n};\n\nconsole.log(config); // {size: 12, mobileSize: 4}\n")),(0,r.kt)("h2",{parentName:"admonition",id:"custom-objects"},"Custom Objects"),(0,r.kt)("p",{parentName:"admonition"},"JavaScript is a prototype-based language that contains no class statement, as you'd find in C++ or Java (this is sometimes confusing for programmers accustomed to languages with a class statement). Instead, JavaScript uses functions as classes."),(0,r.kt)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript#custom_objects",class:"external"},"developer.mozilla.org")))}m.isMDXComponent=!0}}]);