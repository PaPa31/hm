"use strict";(self.webpackChunkhuman_and_machine=self.webpackChunkhuman_and_machine||[]).push([[72162],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=u(r),m=a,h=d["".concat(s,".").concat(m)]||d[m]||l[m]||o;return r?n.createElement(h,i(i({ref:t},p),{},{components:r})):n.createElement(h,i({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},90396:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var n=r(87462),a=(r(67294),r(3905));const o={id:"14-20-practice",title:"14.20 Practice",date:new Date("2021-04-27T18:37:36.000Z")},i=void 0,c={unversionedId:"react-complete-guide/14-redux/14-20-practice",id:"react-complete-guide/14-redux/14-20-practice",title:"14.20 Practice",description:"Time for you to practice redux and redux-react together a little bit. Is only one task in the assignment. Turn the application you find attached to this assignment problem here into one using redux. In this application we simply get a button which generates random users, actually just the ages random. You can also click on then to remove them. And of course you can inspect the code for them. It's a react application using the features you learned about thus far prior to redux.",source:"@site/courses/react-complete-guide/14-redux/14-20-practice.md",sourceDirName:"react-complete-guide/14-redux",slug:"/react-complete-guide/14-redux/14-20-practice",permalink:"/hm/courses/react-complete-guide/14-redux/14-20-practice",draft:!1,editUrl:"https://github.com/papa31/hm/edit/documentation/courses/react-complete-guide/14-redux/14-20-practice.md",tags:[],version:"current",lastUpdatedBy:"PaPa31",lastUpdatedAt:1631602446,formattedLastUpdatedAt:"Sep 14, 2021",frontMatter:{id:"14-20-practice",title:"14.20 Practice",date:"2021-04-27T18:37:36.000Z"},sidebar:"Courses",previous:{title:"14.19 Understanding State Types",permalink:"/hm/courses/react-complete-guide/14-redux/14-19-understanding-state-types"},next:{title:"14.21 Result Practice",permalink:"/hm/courses/react-complete-guide/14-redux/14-21-result-practice"}},s={},u=[],p={toc:u};function l(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Time for you to practice ",(0,a.kt)("inlineCode",{parentName:"p"},"redux")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"redux-react")," together a little bit. Is only one task in the assignment. Turn the application you find attached to this assignment problem here into one using redux. In this application we simply get a button which generates random users, actually just the ages random. You can also click on then to remove them. And of course you can inspect the code for them. It's a react application using the features you learned about thus far prior to redux.\nSo it's a simply has the container components ",(0,a.kt)("inlineCode",{parentName:"p"},"AddPerson")," and the ",(0,a.kt)("inlineCode",{parentName:"p"},"Person")," component. Clicklistners pass through props for both of these. Handle methods are defining in the container, and then we manage the state with the persons array."),(0,a.kt)("p",null,"We used immutable update method ",(0,a.kt)("inlineCode",{parentName:"p"},"concat")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"filter")," to update that array. With the Person that generates here. Random age. Random id. Sidenote the id is not really unique but good enough here.\nAnd then is it.\nThis our application."),(0,a.kt)("p",null,"Now I want you to, first of all, install ",(0,a.kt)("inlineCode",{parentName:"p"},"redux")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"react-redux"),". Then to create the reducer. Create that store. Set up that store by adding a provider. And then of course also create map dispatch the props and map state props."),(0,a.kt)("p",null,"Manage our ",(0,a.kt)("inlineCode",{parentName:"p"},"persons")," array and the actions related to it in our redux store."),(0,a.kt)("p",null,"Good luck with it.\nFeel free to revisit some lectures of this module as a obviously spread new and typical to do, but you can do it will solve it together in the solution video."))}l.isMDXComponent=!0}}]);