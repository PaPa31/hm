"use strict";(self.webpackChunkhuman_and_machine=self.webpackChunkhuman_and_machine||[]).push([[86950],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(n),m=l,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,i=new Array(a);i[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},90872:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var r=n(87462),l=(n(67294),n(3905));const a={id:"sed-remove-all-but-alnum",title:"Sed Remove All But Letters and Digits",date:new Date("2022-06-02T11:08:28.000Z")},i=void 0,o={unversionedId:"utils/unix/sed-remove-all-but-alnum",id:"utils/unix/sed-remove-all-but-alnum",title:"Sed Remove All But Letters and Digits",description:"] property will find all non-alphanumerical characters.",source:"@site/docs/utils/unix/sed-remove-all-but-alnum.md",sourceDirName:"utils/unix",slug:"/utils/unix/sed-remove-all-but-alnum",permalink:"/hm/docs/utils/unix/sed-remove-all-but-alnum",draft:!1,editUrl:"https://github.com/papa31/hm/edit/documentation/docs/utils/unix/sed-remove-all-but-alnum.md",tags:[],version:"current",lastUpdatedBy:"PaPa31",lastUpdatedAt:1662229845,formattedLastUpdatedAt:"Sep 3, 2022",frontMatter:{id:"sed-remove-all-but-alnum",title:"Sed Remove All But Letters and Digits",date:"2022-06-02T11:08:28.000Z"},sidebar:"Docs",previous:{title:"List File Permission",permalink:"/hm/docs/utils/unix/list-file-permission"},next:{title:"Trans",permalink:"/hm/docs/utils/unix/trans"}},u={},s=[{value:"Given",id:"given",level:2},{value:"Solved Initial",id:"solved-initial",level:2},{value:"Update",id:"update",level:2},{value:"Source",id:"source",level:2}],c={toc:s};function p(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"[^[:alnum:]]")," property will find all non-alphanumerical characters."),(0,l.kt)("h2",{id:"given"},"Given"),(0,l.kt)("p",null,"'file' with this content:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"MytextOnly !@#!text@@32423#@$text#%$#text%#t23432ext$32342%^-_+-=-_++_;:\"'][}}{|\\/\n")),(0,l.kt)("h2",{id:"solved-initial"},"Solved Initial"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sed 's/[^[:alnum:]]\\+//g' file\nMytextOnlytext32423texttextt23432ext32342\n")),(0,l.kt)("h2",{id:"update"},"Update"),(0,l.kt)("p",null,"Check my updated answer for allowing forward slash. @Tiago: Quantifier + is used for efficiency so that less # of replacements happen."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sed 's~[^[:alnum:]/]\\+~~g' file\nMytextOnlytext32423texttextt23432ext32342/\n")),(0,l.kt)("h2",{id:"source"},"Source"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{href:"https://stackoverflow.com/a/28617593",class:"external"},"stackoverflow.com: 28617593"))))}p.isMDXComponent=!0}}]);