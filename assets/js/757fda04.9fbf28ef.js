"use strict";(self.webpackChunkhuman_and_machine=self.webpackChunkhuman_and_machine||[]).push([[11634],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return m}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(t),m=o,h=p["".concat(c,".").concat(m)]||p[m]||d[m]||a;return t?r.createElement(h,i(i({ref:n},l),{},{components:t})):r.createElement(h,i({ref:n},l))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=p;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},21149:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return l},default:function(){return p}});var r=t(87462),o=t(63366),a=(t(67294),t(3905)),i=["components"],s={id:"18-05-adding-actions",title:"18.05 Adding Actions",date:new Date("2021-07-18T18:01:14.000Z")},c=void 0,u={unversionedId:"react-complete-guide/18-adding-authentication-to-our-burger-project/18-05-adding-actions",id:"react-complete-guide/18-adding-authentication-to-our-burger-project/18-05-adding-actions",isDocsHomePage:!1,title:"18.05 Adding Actions",description:"Auth.js",source:"@site/courses/react-complete-guide/18-adding-authentication-to-our-burger-project/18-05-adding-actions.md",sourceDirName:"react-complete-guide/18-adding-authentication-to-our-burger-project",slug:"/react-complete-guide/18-adding-authentication-to-our-burger-project/18-05-adding-actions",permalink:"/hm/courses/react-complete-guide/18-adding-authentication-to-our-burger-project/18-05-adding-actions",editUrl:"https://github.com/papa31/hm/edit/documentation/courses/react-complete-guide/18-adding-authentication-to-our-burger-project/18-05-adding-actions.md",tags:[],version:"current",lastUpdatedBy:"PaPa31",lastUpdatedAt:1631602446,formattedLastUpdatedAt:"9/14/2021",frontMatter:{id:"18-05-adding-actions",title:"18.05 Adding Actions",date:"2021-07-18T18:01:14.000Z"},sidebar:"Docs",previous:{title:"18.04 Adding An Auth Form",permalink:"/hm/courses/react-complete-guide/18-adding-authentication-to-our-burger-project/18-04-adding-an-auth-form"},next:{title:"18.06 Getting A Token From Backend",permalink:"/hm/courses/react-complete-guide/18-adding-authentication-to-our-burger-project/18-06-getting-a-token-from-backend"}},l=[{value:"<code>Auth.js</code>",id:"authjs",children:[]},{value:"<code>actionTypes.js</code>",id:"actiontypesjs",children:[]},{value:"<code>actions/index.js</code>",id:"actionsindexjs",children:[]},{value:"New <code>auth.js</code>",id:"new-authjs",children:[]}],d={toc:l};function p(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"authjs"},(0,a.kt)("inlineCode",{parentName:"h2"},"Auth.js")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="src\\containers\\Auth\\Auth.js" {2,5,89-95,119,128-133}',title:'"src\\containers\\Auth\\Auth.js"',"{2,5,89-95,119,128-133}":!0},'import React, { Component } from "react";\nimport { connect } from "react-redux";\nimport Button from "../../components/UI/Button/Button";\nimport Input from "../../components/UI/Input/Input";\nimport * as actions from "../../store/actions/index";\nimport classes from "./Auth.module.css";\n\nclass Auth extends Component {\n  state = {\n    controls: {\n      email: {\n        elementType: "input",\n        elementConfig: {\n          type: "email",\n          placeholder: "Mail Address",\n        },\n        value: "",\n        validation: {\n          required: true,\n          isEmail: true,\n        },\n        valid: false,\n        touched: false,\n      },\n      password: {\n        elementType: "input",\n        elementConfig: {\n          type: "password",\n          placeholder: "Password",\n        },\n        value: "",\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n        touched: false,\n      },\n    },\n  };\n\n  checkValidity(value, rules) {\n    let isValid = true;\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== "" && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      const pattern = /[a-z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    return isValid;\n  }\n\n  inputChangedHandler = (event, controlName) => {\n    const updatedControls = {\n      ...this.state.controls,\n      [controlName]: {\n        ...this.state.controls[controlName],\n        value: event.target.value,\n        valid: this.checkValidity(\n          event.target.value,\n          this.state.controls[controlName].validation\n        ),\n        touched: true,\n      },\n    };\n    this.setState({ controls: updatedControls });\n  };\n\n  submitHandler = (event) => {\n    event.preventDefault();\n    this.props.onAuth(\n      this.state.controls.email.value,\n      this.state.controls.password.value\n    );\n  };\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key],\n      });\n    }\n\n    const form = formElementsArray.map((formElement) => (\n      <Input\n        key={formElement.id}\n        elementType={formElement.config.elementType}\n        elementConfig={formElement.config.elementConfig}\n        value={formElement.config.value}\n        invalid={!formElement.config.valid}\n        shouldValidate={formElement.config.validation}\n        touched={formElement.config.touched}\n        changed={(event) => this.inputChangedHandler(event, formElement.id)}\n      />\n    ));\n    return (\n      <div className={classes.Auth}>\n        <form onSubmit={this.submitHandler}>\n          {form}\n          <Button btnType="Success">Submit</Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuth: (email, password) => dispatch(actions.auth(email, password)),\n  };\n};\nexport default connect(null, mapDispatchToProps)(Auth);\n')),(0,a.kt)("h2",{id:"actiontypesjs"},(0,a.kt)("inlineCode",{parentName:"h2"},"actionTypes.js")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="src\\store\\actions\\actionTypes.js" {15-17}',title:'"src\\store\\actions\\actionTypes.js"',"{15-17}":!0},'export const ADD_INGREDIENT = "ADD_INGREDIENT";\nexport const REMOVE_INGREDIENT = "REMOVE_INGREDIENT";\nexport const SET_INGREDIENTS = "SET_INGREDIENTS";\nexport const FETCH_INGREDIENTS_FAILED = "FETCH_INGREDIENTS_FAILED";\n\nexport const PURCHASE_BURGER_START = "PURCHASE_BURGER_START";\nexport const PURCHASE_BURGER_SUCCESS = "PURCHASE_BURGER_SUCCESS";\nexport const PURCHASE_BURGER_FAIL = "PURCHASE_BURGER_FAIL";\nexport const PURCHASE_INIT = "PURCHASE_INIT";\n\nexport const FETCH_ORDERS_START = "FETCH_ORDERS_START";\nexport const FETCH_ORDERS_SUCCESS = "FETCH_ORDERS_SUCCESS";\nexport const FETCH_ORDERS_FAIL = "FETCH_ORDERS_FAIL";\n\nexport const AUTH_START = "AUTH_START";\nexport const AUTH_SUCCESS = "AUTH_SUCCESS";\nexport const AUTH_FAIL = "AUTH_FAIL";\n')),(0,a.kt)("h2",{id:"actionsindexjs"},(0,a.kt)("inlineCode",{parentName:"h2"},"actions/index.js")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="src\\store\\actions\\index.js" {1}',title:'"src\\store\\actions\\index.js"',"{1}":!0},'export { auth } from "./auth";\nexport {\n  addIngredient,\n  initIngredients,\n  removeIngredient,\n} from "./burgerBuilder";\nexport { fetchOrders, purchaseBurger, purchaseInit } from "./order";\n')),(0,a.kt)("h2",{id:"new-authjs"},"New ",(0,a.kt)("inlineCode",{parentName:"h2"},"auth.js")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="src\\store\\actions\\auth.js" {}',title:'"src\\store\\actions\\auth.js"',"{}":!0},'import * as actionTypes from "./actionTypes";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\nexport const authSuccess = (authData) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    authData: authData,\n  };\n};\n\nexport const authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error,\n  };\n};\n\nexport const auth = (email, password) => {\n  return (dispatch) => {\n    dispatch(authStart());\n  };\n};\n')))}p.isMDXComponent=!0}}]);