"use strict";(self.webpackChunkhuman_and_machine=self.webpackChunkhuman_and_machine||[]).push([[3973],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(n),m=o,g=p["".concat(c,".").concat(m)]||p[m]||d[m]||r;return n?a.createElement(g,l(l({ref:t},u),{},{components:n})):a.createElement(g,l({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<r;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},52591:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return p}});var a=n(87462),o=n(63366),r=(n(67294),n(3905)),l=["components"],i={id:"language-tool-linter-in-docker",title:"LanguageTool Linter In Docker",date:new Date("2021-03-28T22:31:35.000Z")},c=void 0,s={unversionedId:"virtual-machines/docker/language-tool-linter-in-docker",id:"virtual-machines/docker/language-tool-linter-in-docker",isDocsHomePage:!1,title:"LanguageTool Linter In Docker",description:"VS Code LanguageTool Linter",source:"@site/docs/virtual-machines/docker/language-tool-linter-in-docker.md",sourceDirName:"virtual-machines/docker",slug:"/virtual-machines/docker/language-tool-linter-in-docker",permalink:"/hm/docs/virtual-machines/docker/language-tool-linter-in-docker",editUrl:"https://github.com/papa31/hm/edit/documentation/docs/virtual-machines/docker/language-tool-linter-in-docker.md",tags:[],version:"current",lastUpdatedBy:"PaPa31",lastUpdatedAt:1633542680,formattedLastUpdatedAt:"10/6/2021",frontMatter:{id:"language-tool-linter-in-docker",title:"LanguageTool Linter In Docker",date:"2021-03-28T22:31:35.000Z"},sidebar:"Docs",previous:{title:"Install Docker Software",permalink:"/hm/docs/virtual-machines/docker/install-docker-software"},next:{title:"Install and Setup Multipass",permalink:"/hm/docs/virtual-machines/multipass/install-setup-multipass"}},u=[{value:"VS Code LanguageTool Linter",id:"vs-code-languagetool-linter",children:[]},{value:"Install Docker software",id:"install-docker-software",children:[]},{value:"Run Container in Shell",id:"run-container-in-shell",children:[]},{value:"Run Container in VS-Code",id:"run-container-in-vs-code",children:[]},{value:"Docker Extension Settings",id:"docker-extension-settings",children:[]},{value:"Auto run",id:"auto-run",children:[]}],d={toc:u};function p(e){var t=e.components,i=(0,o.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"vs-code-languagetool-linter"},"VS Code LanguageTool Linter"),(0,r.kt)("a",{href:"https://github.com/davidlday/vscode-languagetool-linter",class:"external"},"GitHub.com: VS Code Languagetool Linter"),(0,r.kt)("p",null,"First, install the VS Code ",(0,r.kt)("inlineCode",{parentName:"p"},"LanguageTool")," extension (Grammar, Style and Spell Checking in VS Code via ",(0,r.kt)("a",{href:"https://www.languagetool.org/",class:"external"},"LanguageTool (languagetool.org)"),". Support Markdown, MDX, HTML, and plain text files.):"),(0,r.kt)("a",{href:"https://marketplace.visualstudio.com/items?itemName=davidlday.languagetool-linter",class:"external"},"marketplace.visualstudio.com: Languagetool Linter"),(0,r.kt)("h2",{id:"install-docker-software"},"Install Docker software"),(0,r.kt)("p",null,"Then you need to ",(0,r.kt)("a",{parentName:"p",href:"install-docker-software"},"install ",(0,r.kt)("inlineCode",{parentName:"a"},"Docker")," software")," on your system."),(0,r.kt)("h2",{id:"run-container-in-shell"},"Run Container in Shell"),(0,r.kt)("a",{href:"https://github.com/silvio/docker-languagetool",class:"external"},"GitHub.com: Docker Languagetool"),(0,r.kt)("p",null,"Pull the ",(0,r.kt)("inlineCode",{parentName:"p"},"Dockerfile")," (to get the languagetools running on a system without ",(0,r.kt)("inlineCode",{parentName:"p"},"java"),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"docker pull silviof/docker-languagetool\n")),(0,r.kt)("p",null,"Run it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"docker run --rm -p 8010:8010 silviof/docker-languagetool\n")),(0,r.kt)("h2",{id:"run-container-in-vs-code"},"Run Container in VS-Code"),(0,r.kt)("a",{href:"https://gnulinux.ch/languagetool-in-vs-code",class:"external"},"gnulinux.ch: Languagetool In VS Code"),(0,r.kt)("p",null,"Install the ",(0,r.kt)("inlineCode",{parentName:"p"},"Docker")," extension."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"To install the extension, open the Extensions view, search for ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"docker"))," to filter results and select Docker extension authored by Microsoft.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The extension recognizes workspaces that use most popular development languages (C#, Node.js, Python, Ruby, Go, and Java) and customizes generated Docker files accordingly.")),(0,r.kt)("p",null,"Open the Docker view. Click on ",(0,r.kt)("inlineCode",{parentName:"p"},"languagetool")," image. Right-click on ",(0,r.kt)("inlineCode",{parentName:"p"},"latest"),". Select ",(0,r.kt)("inlineCode",{parentName:"p"},"Run"),"."),(0,r.kt)("h2",{id:"docker-extension-settings"},"Docker Extension Settings"),(0,r.kt)("p",null,"Open VS-Code settings with ",(0,r.kt)("inlineCode",{parentName:"p"},"Ctrl+,"),". In the ",(0,r.kt)("inlineCode",{parentName:"p"},"Extensions -> LanguageTool Linter")," submenu find the ",(0,r.kt)("inlineCode",{parentName:"p"},"External: Url")," field and insert the server IP-address and the port of your previously configured Docker container. In my case: ",(0,r.kt)("inlineCode",{parentName:"p"},"192.168.99.100:8010"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"LanguageTool Linter Settings",src:n(64968).Z})),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If Docker container was launched on the local computer, not on a server, you need to use the address ",(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:8010")," (or ",(0,r.kt)("inlineCode",{parentName:"p"},"http://127.0.0.1:8010"),")."))),(0,r.kt)("h2",{id:"auto-run"},"Auto run"),(0,r.kt)("p",null,"Add this code to the end of the ",(0,r.kt)("inlineCode",{parentName:"p"},"Microsoft.PowerShell_profile.ps1")," file (to open it, run in PowerShell: ",(0,r.kt)("inlineCode",{parentName:"p"},"notepad $profile"),")"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell",metastring:'title="PowerShell"',title:'"PowerShell"'},'# Preferable alternative: Start-ThreadJob 1\n$job = Start-Job { docker-machine start default3}\n\n$Env:DOCKER_TLS_VERIFY = "1"\n$Env:DOCKER_HOST = "tcp://192.168.99.101:2376"\n$Env:DOCKER_CERT_PATH = "C:\\Users\\parsh\\.docker\\machine\\machines\\default3"\n$Env:DOCKER_MACHINE_NAME = "default3"\n$Env:COMPOSE_CONVERT_WINDOWS_PATHS = "true"\n# Run this command to configure your shell:\n& "C:\\ProgramData\\chocolatey\\lib\\docker-machine\\bin\\docker-machine.exe" env default3 | Invoke-Expression\n\n# Preferable alternative: Start-ThreadJob 2\n$job = Start-Job { docker run --rm -p 8010:8010 silviof/docker-languagetool }\n')),(0,r.kt)("p",null,"After that, when you start PowerShell, it first starts the ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-machine")," and then ",(0,r.kt)("inlineCode",{parentName:"p"},"languagetool linter")," container in the background."))}p.isMDXComponent=!0},64968:function(e,t,n){t.Z=n.p+"assets/images/languagetool-linter-settings-c3b0609cbd041ae30cd0dd4b98a9ead4.png"}}]);