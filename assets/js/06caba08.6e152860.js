"use strict";(self.webpackChunkhuman_and_machine=self.webpackChunkhuman_and_machine||[]).push([[66629],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,g=d["".concat(s,".").concat(m)]||d[m]||l[m]||o;return n?r.createElement(g,c(c({ref:t},u),{},{components:n})):r.createElement(g,c({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var p=2;p<o;p++)c[p]=n[p];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},72296:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),c=["components"],i={id:"7-25-setting-state-correctly",title:"7.25 Setting State Correctly",date:new Date("2021-04-08T20:11:38.000Z")},s=void 0,p={unversionedId:"react-complete-guide/07-diving-deeper-into-components-and-react-internals/7-25-setting-state-correctly",id:"react-complete-guide/07-diving-deeper-into-components-and-react-internals/7-25-setting-state-correctly",title:"7.25 Setting State Correctly",description:"Let's say that whenever our name changes, and we execute the nameChangedHandler, we want to count that, so we essentially count every keystroke made or every change made.",source:"@site/courses/react-complete-guide/07-diving-deeper-into-components-and-react-internals/7-25-setting-state-correctly.md",sourceDirName:"react-complete-guide/07-diving-deeper-into-components-and-react-internals",slug:"/react-complete-guide/07-diving-deeper-into-components-and-react-internals/7-25-setting-state-correctly",permalink:"/hm/courses/react-complete-guide/07-diving-deeper-into-components-and-react-internals/7-25-setting-state-correctly",editUrl:"https://github.com/papa31/hm/edit/documentation/courses/react-complete-guide/07-diving-deeper-into-components-and-react-internals/7-25-setting-state-correctly.md",tags:[],version:"current",lastUpdatedBy:"PaPa31",lastUpdatedAt:1631602446,formattedLastUpdatedAt:"9/14/2021",frontMatter:{id:"7-25-setting-state-correctly",title:"7.25 Setting State Correctly",date:"2021-04-08T20:11:38.000Z"},sidebar:"Docs",previous:{title:"7.24 Passing Unknown Props",permalink:"/hm/courses/react-complete-guide/07-diving-deeper-into-components-and-react-internals/7-24-passing-unknown-props"},next:{title:"7.26 Using PropTypes",permalink:"/hm/courses/react-complete-guide/07-diving-deeper-into-components-and-react-internals/7-26-using-prop-types"}},u=[],l={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Let's say that whenever our name changes, and we execute the nameChangedHandler, we want to count that, so we essentially count every keystroke made or every change made."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="App.js" {11,21-26}',title:'"App.js"',"{11,21-26}":!0},'\n...\n\n  state = {\n    persons: [\n      { id: "20210330005200", name: "Max", age: 28 },\n      { id: "20210330005205", name: "Manu", age: 29 },\n      { id: "20210330005209", name: "Stephanie", age: 26 },\n    ],\n    showCockpit: true,\n    changeCounter: 0,\n  };\n\n...\n\n    person.name = event.target.value;\n\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n\n    this.setState((prevState, props) => {\n      return {\n        persons: persons,\n        changeCounter: prevState.changeCounter + 1,\n      };\n    });\n  };\n')))}d.isMDXComponent=!0}}]);