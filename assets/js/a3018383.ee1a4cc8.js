"use strict";(self.webpackChunkhuman_and_machine=self.webpackChunkhuman_and_machine||[]).push([[11764],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var r=a.createContext({}),u=function(e){var t=a.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(r.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,r=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=s,h=m["".concat(r,".").concat(d)]||m[d]||p[d]||o;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var r in t)hasOwnProperty.call(t,r)&&(l[r]=t[r]);l.originalType=e,l.mdxType="string"==typeof e?e:s,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},81506:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return r},metadata:function(){return u},toc:function(){return c},default:function(){return m}});var a=n(87462),s=n(63366),o=(n(67294),n(3905)),i=["components"],l={id:"local-k3s-cluster-multipass",title:"Local K3s Cluster Made Easy With Multipass",sidebar_label:"Local K3s Cluster with Multipass"},r=void 0,u={unversionedId:"virtual-machines/multipass/local-k3s-cluster-multipass",id:"virtual-machines/multipass/local-k3s-cluster-multipass",title:"Local K3s Cluster Made Easy With Multipass",description:"Luc Juggery",source:"@site/docs/virtual-machines/multipass/local-k3s-cluster-made-easy-with-multipass.md",sourceDirName:"virtual-machines/multipass",slug:"/virtual-machines/multipass/local-k3s-cluster-multipass",permalink:"/hm/docs/virtual-machines/multipass/local-k3s-cluster-multipass",editUrl:"https://github.com/papa31/hm/edit/documentation/docs/virtual-machines/multipass/local-k3s-cluster-made-easy-with-multipass.md",tags:[],version:"current",lastUpdatedBy:"papa31",lastUpdatedAt:1608669754,formattedLastUpdatedAt:"12/22/2020",frontMatter:{id:"local-k3s-cluster-multipass",title:"Local K3s Cluster Made Easy With Multipass",sidebar_label:"Local K3s Cluster with Multipass"},sidebar:"Docs",previous:{title:"Let's Run Linux",permalink:"/hm/docs/virtual-machines/multipass/lets-run-linux"},next:{title:"Working with Multipass Instances",permalink:"/hm/docs/virtual-machines/multipass/working-with-multipass-instances"}},c=[{value:"Getting Multipass",id:"getting-multipass",children:[],level:2},{value:"Creation of the VMs",id:"creation-of-the-vms",children:[],level:2},{value:"Initialize K3s on node1",id:"initialize-k3s-on-node1",children:[],level:2},{value:"Join node2 and node3 to the Cluster",id:"join-node2-and-node3-to-the-cluster",children:[],level:2},{value:"Get the Cluster Configuration",id:"get-the-cluster-configuration",children:[],level:2},{value:"Summary",id:"summary",children:[],level:2},{value:"Responses (4)",id:"responses-4",children:[{value:"Yohannes Russom",id:"yohannes-russom",children:[{value:"11 months ago",id:"11-months-ago",children:[],level:4}],level:3},{value:"Zulhilmi Zainudin",id:"zulhilmi-zainudin",children:[{value:"6 months ago",id:"6-months-ago",children:[],level:4}],level:3},{value:"Scott Lett",id:"scott-lett",children:[{value:"7 months ago",id:"7-months-ago",children:[],level:4}],level:3},{value:"Praveen Shastrula",id:"praveen-shastrula",children:[{value:"3 months ago",id:"3-months-ago",children:[],level:4},{value:"You have <strong>2</strong> free member-only stories left this month.",id:"you-have-2-free-member-only-stories-left-this-month",children:[],level:4}],level:3}],level:2}],p={toc:c};function m(e){var t=e.components,l=(0,s.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://medium.com/better-programming/"},(0,o.kt)("img",{src:n(74394).Z,width:"540",height:"73"}))),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://medium.com/@lucjuggery"},"Luc Juggery")),(0,o.kt)("p",null,"Nov 8, 2019 \xb7 4 min read \xb7 ",(0,o.kt)("a",{parentName:"p",href:"https://medium.com/better-programming/local-k3s-cluster-made-easy-with-multipass-108bf6ce577c"},"source")," "),(0,o.kt)("p",null,(0,o.kt)("a",{target:"_blank",href:n(9090).Z},(0,o.kt)("img",{src:n(60324).Z,width:"1132",height:"600"}))),(0,o.kt)("p",null,"A couple of weeks ago, I stumble upon ",(0,o.kt)("a",{parentName:"p",href:"https://multipass.run"},"Multipass"),", a tool that allows you to spin up Ubuntu VMs in a matter of seconds on a Mac, Linux, or Windows workstation."),(0,o.kt)("p",null,"Depending upon your OS, Multipass uses Hyper-V, HyperKit, KVM, or VirtualBox natively for the fastest startup time."),(0,o.kt)("p",null,"In this short article, we\u2019ll set up a K3s Kubernetes cluster on virtual machines created with Multipass."),(0,o.kt)("h2",{id:"getting-multipass"},"Getting Multipass"),(0,o.kt)("p",null,"Just head up to ",(0,o.kt)("a",{parentName:"p",href:"https://multipass.run/"},"Multipass"),", and download the binary for your platform. Once installed, you can get the list of the available commands. We\u2019ll only use a couple of them in this article."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ multipass  \nUsage: multipass \\[options\\] <command>  \nCreate, control and connect to Ubuntu instances.This is a command line utility for multipass, a  \nservice that manages Ubuntu instances.Options:  \n  -h, --help     Display this help  \n  -v, --verbose  Increase logging verbosity, repeat up to three times for more  \n                 detailAvailable commands:  \n  delete    Delete instances  \n  exec      Run a command on an instance  \n  find      Display available images to create instances from  \n  get       Get a configuration option  \n  help      Display help about a command  \n  info      Display information about instances  \n  launch    Create and start an Ubuntu instance  \n  list      List all available instances  \n  mount     Mount a local directory in the instance  \n  purge     Purge all deleted instances permanently  \n  recover   Recover deleted instances  \n  restart   Restart instances  \n  set       Set a configuration option  \n  shell     Open a shell on a running instance  \n  start     Start instances  \n  stop      Stop running instances  \n  suspend   Suspend running instances  \n  transfer  Transfer files between the host and instances  \n  umount    Unmount a directory from an instance  \n  version   Show version details\n")),(0,o.kt)("h2",{id:"creation-of-the-vms"},"Creation of the VMs"),(0,o.kt)("p",null,"First, we create three VMs, keeping the default configuration of one CPU and 1GB RAM."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ multipass launch -n node1  \n$ multipass launch -n node2  \n$ multipass launch -n node3\n")),(0,o.kt)("p",null,"Next, we verify the three VMs are in the running state"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ multipass list  \nName         State             IPv4             Image  \nnode3        Running           192.168.64.13    Ubuntu 18.04 LTS  \nnode2        Running           192.168.64.12    Ubuntu 18.04 LTS  \nnode1        Running           192.168.64.11    Ubuntu 18.04 LTS\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note:")," In this example, I use Multipass on MacOS, so the VMs are run on HyperKit as I can confirm listing the HyperKit-related processes."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'luc@saturn:~$ ps aux | grep -i "\\[h\\]yperkit"  \n... com.docker.hyperkit ...  \n... com.canonical.multipass/bin/hyperkit...  \n... com.canonical.multipass/bin/hyperkit...  \n... com.canonical.multipass/bin/hyperkit...\n')),(0,o.kt)("p",null,"Among those processes, the first one is the Docker daemon already running on my machine. The next three are the VMs created above."),(0,o.kt)("h2",{id:"initialize-k3s-on-node1"},"Initialize K3s on node1"),(0,o.kt)("p",null,"First, we run a command on ",(0,o.kt)("inlineCode",{parentName:"p"},"node1")," (using the ",(0,o.kt)("em",{parentName:"p"},"exec")," subcommand of Multipass) to install K3s as defined in the ",(0,o.kt)("a",{parentName:"p",href:"https://k3s.io"},"documentation"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'$ multipass exec node1 -- \\  \n  bash -c "curl -sfL https://get.k3s.io | sh -"\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note:")," The K3s initialisation took less than 30 seconds \u2026 really impressive for a certified Kubernetes distribution."),(0,o.kt)("p",null,"Then, from the local machine, we gather the elements we\u2019ll need to add additional nodes to the cluster:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The token to join the cluster")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ TOKEN=$(multipass exec node1 sudo cat /var/lib/rancher/k3s/server/node-token)\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The IP of the API server running on ",(0,o.kt)("inlineCode",{parentName:"li"},"node1"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ IP=$(multipass info node1 | grep IPv4 | awk '{print $2}')\n")),(0,o.kt)("h2",{id:"join-node2-and-node3-to-the-cluster"},"Join node2 and node3 to the Cluster"),(0,o.kt)("p",null,"From the local machine, we run the following commands to add ",(0,o.kt)("inlineCode",{parentName:"p"},"node2")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"node3")," to the cluster."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'# Joining node2\n$ multipass exec node2 -- \\\nbash -c "curl -sfL https://get.k3s.io | K3S_URL=\\"https://$IP:6443\\" K3S_TOKEN=\\"$TOKEN\\" sh -"\n# Joining node3\n$ multipass exec node3 -- \\\nbash -c "curl -sfL https://get.k3s.io | K3S_URL=\\"https://$IP:6443\\" K3S_TOKEN=\\"$TOKEN\\" sh -"\n')),(0,o.kt)("p",null,"As we can see, those commands use the TOKEN and IP address we defined above."),(0,o.kt)("h2",{id:"get-the-cluster-configuration"},"Get the Cluster Configuration"),(0,o.kt)("p",null,"Running the following command, we can list all the nodes of the cluster:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ multipass exec node1 -- sudo kubectl get nodes  \nNAME    STATUS   ROLES    AGE     VERSION  \nnode1   Ready    master   5m31s   v1.16.2-k3s.1  \nnode3   Ready    <none>   21s     v1.16.2-k3s.1  \nnode2   Ready    <none>   45s     v1.16.2-k3s.1\n")),(0,o.kt)("p",null,"To access the cluster\u2019s API server from our local machine, we only need to get the ",(0,o.kt)("inlineCode",{parentName:"p"},"kubeconfig")," file created on ",(0,o.kt)("inlineCode",{parentName:"p"},"node1")," during the setup."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ multipass exec node1 sudo cat /etc/rancher/k3s/k3s.yaml > k3s.yaml\n")),(0,o.kt)("p",null,"We then need to change the ",(0,o.kt)("inlineCode",{parentName:"p"},"server")," key so it references the remote IP address of ",(0,o.kt)("inlineCode",{parentName:"p"},"node1")," instead of the localhost."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sed -i '' \"s/127.0.0.1/$IP/\" k3s.yaml\n")),(0,o.kt)("p",null,"Finally, we configure our local kubectl so it uses the kubeconfig file (k3s.yaml) we\u2019ve just retrieved. A simple way is to set the ",(0,o.kt)("inlineCode",{parentName:"p"},"KUBECONFIG")," environment variable so it points towards the configuration file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"export KUBECONFIG=$PWD/k3s.yaml\n")),(0,o.kt)("p",null,"We\u2019re all set, we can now communicate with the cluster from your local machine."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ kubectl get nodes  \nNAME STATUS ROLES AGE VERSION  \nnode1 Ready master 10h v1.16.2-k3s.1  \nnode2 Ready <none> 10h v1.16.2-k3s.1  \nnode3 Ready <none> 10h v1.16.2-k3s.1\n")),(0,o.kt)("p",null,"Note: all the steps defined in this post can be run from the following gist:"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://gist.github.com/lucj/5a0e2286b40130d02388a264e6924ed4"},"https://gist.github.com/lucj/5a0e2286b40130d02388a264e6924ed4")),(0,o.kt)("h2",{id:"summary"},"Summary"),(0,o.kt)("p",null,"Multipass is a very useful tool. Its integration with low-level hypervisors makes it a good choice to deploy multiple VMs locally and to play with many distributed solutions such as the great K3s Kubernetes distribution."),(0,o.kt)("h2",{id:"responses-4"},"Responses (4)"),(0,o.kt)("h3",{id:"yohannes-russom"},"Yohannes Russom"),(0,o.kt)("h4",{id:"11-months-ago"},"11 months ago"),(0,o.kt)("p",null,"2"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Thank you ,"),(0,o.kt)("p",{parentName:"blockquote"},"I am facing an issue with kubectl command not found` and i guess its becuase the k3s deployment didnt get succeded.")),(0,o.kt)("h3",{id:"zulhilmi-zainudin"},"Zulhilmi Zainudin"),(0,o.kt)("h4",{id:"6-months-ago"},"6 months ago"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Hi. I\u2019m curious, why you put \u201ch\u201d in square brackets for this command? ",(0,o.kt)("inlineCode",{parentName:"p"},"ps aux | grep -i \u201c\\[h\\]yperkit\u201d"))),(0,o.kt)("h3",{id:"scott-lett"},"Scott Lett"),(0,o.kt)("h4",{id:"7-months-ago"},"7 months ago"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Nice work!"),(0,o.kt)("p",{parentName:"blockquote"},"On my Ubuntu box, the the sed command doesn\u2019t work unless I add \u201c-e\u201d before the substitution expression.")),(0,o.kt)("h3",{id:"praveen-shastrula"},"Praveen Shastrula"),(0,o.kt)("h4",{id:"3-months-ago"},"3 months ago"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Very simple and completely automated. Thank you! (I followed a different article first, but it had some missing instruction and crashed my nodes!, but yours works!)")),(0,o.kt)("h4",{id:"you-have-2-free-member-only-stories-left-this-month"},"You have ",(0,o.kt)("strong",{parentName:"h4"},"2")," free member-only stories left this month."))}m.isMDXComponent=!0},9090:function(e,t,n){t.Z=n.p+"assets/files/1_-Alr4CVTx_zV3o9uuHimsA-1f440081bdd00d4caae1f4a144513117.png"},60324:function(e,t,n){t.Z=n.p+"assets/images/1_-Alr4CVTx_zV3o9uuHimsA-1f440081bdd00d4caae1f4a144513117.png"},74394:function(e,t,n){t.Z=n.p+"assets/images/1_S6X0W_XVeBUPe2Mz0hrufA-c1c016b0777f945210d9fc283620b2ac.png"}}]);